<?xml version="1.0"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->
<project name="example" default="jar"
         xmlns:ivy="antlib:org.apache.ivy.ant">
  <!-- some variables used -->
  <property name="lib.dir" value="lib" />
  <property name="build.dir" value="build" />
  <property name="build.test" value="${build.dir}/classes/test" />
  <property name="build.main" value="${build.dir}/classes/main/" />
  <property name="dist.dir" value="${build.dir}/dist" />
  <property name="reports.test" value="${build.dir}/reports/test" />
  <property name="src.dir" value="src" />
  <property name="src.test" location="${src.dir}/test"/>
  <property name="src.test.resources" location="${src.dir}/test/resources"/>
  <property name="src.main" location="${src.dir}/main"/>
  <property name="src.main.resources" location="${src.dir}/main/resources"/>

  <property name="ivy.install.version" value="2.4.0" />
  <property name="ivy.home" value="${user.home}/.ant" />
  <condition property="ivy.home" value="${env.IVY_HOME}">
    <isset property="env.IVY_HOME" />
  </condition>
  <property name="ivy.jar.dir" value="${ivy.home}/lib" />
  <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />


  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${build.test}"/>
    <mkdir dir="${build.main}"/>
  </target>

  <target name="compile" depends="init"
          description="compile the source " >
    <javac srcdir="${src.main}/java"
           destdir="${build.main}"
           source="1.7"
           target="1.7"
           fork="yes"
           optimize="on"
           includeantruntime="false"/>
    <copy todir="${build.main}"
          failonerror="no">
      <fileset dir="${src.main.resources}"/>
    </copy>
  </target>

  <target name="compile-tests" depends="compile,resolve"
          description="compile the source " >
    <javac srcdir="${src.test}/java"
           destdir="${build.test}"
           source="1.7"
           target="1.7"
           fork="yes"
           includeantruntime="false">
      <classpath>
        <path refid="default.classpath" />
        <pathelement location="${build.main}"/>
      </classpath>
    </javac>
    <copy todir="${build.test}"
          failonerror="no">
      <fileset dir="${src.test.resources}"/>
    </copy>
  </target>

  <target name="test" depends="compile-tests" >
    
    <mkdir dir="${reports.test}"/>

    <junit
        printsummary="yes"
        haltonfailure="yes">
      <classpath>
        <path refid="default.classpath" />
        <pathelement location="${build.test}"/>
        <pathelement location="${build.main}"/>
      </classpath>

      <formatter type="plain"/>
      <formatter type="xml"/>

      <batchtest fork="yes" todir="${reports.test}">
        <fileset dir="${src.test}/java">
          <include name="**/*Test.java"/>
          <exclude name="**/*AbstractTest.java"/>
        </fileset>
      </batchtest>

    </junit>

  </target>

  <!-- =================================
       target: resolve
       ================================= -->

  <target name="init-ivy" >
    <!-- try to load ivy here from ivy home, in case the user has not already dropped
         it into ant's lib dir (note that the latter copy will always take precedence).
         We will not fail as long as local lib dir exists (it may be empty) and
         ivy is in at least one of ant's lib dir or the local lib dir. -->
    <path id="ivy.lib.path">
      <fileset dir="${ivy.jar.dir}" includes="*.jar"/>
    </path>
    <taskdef resource="org/apache/ivy/ant/antlib.xml"
             uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
  </target>

  <target name="resolve" depends="init-ivy" description="--> retrieve dependencies with ivy">
    <ivy:retrieve type="jar"/>
    <ivy:resolve />
    <ivy:cachepath pathid="default.classpath" />
  </target>

  <!-- =================================
       target: report
       ================================= -->
  <target name="report" depends="resolve" description="--> generates a report of dependencies">
    <ivy:report todir="${build.dir}"/>
  </target>


  <!-- =================================
       target: clean
       ================================= -->
  <target name="clean" description="--> clean the project">
    <delete includeemptydirs="true">
      <fileset dir="${basedir}">
        <exclude name="src/**" />
        <exclude name="build.xml" />
        <exclude name="ivy.xml" />
      </fileset>
    </delete>
  </target>

  <!-- =================================
       target: clean-cache
       ================================= -->
	<target name="clean-cache" description="--> clean the ivy cache">
		<ivy:cleancache />
	</target>

  <target name="jar" depends="test">
    <mkdir dir="${dist.dir}"/>
    <jar destfile="${dist.dir}/lib/app.jar"
         basedir="${build.main}"
         includes="**"
         />
  </target>

</project>
